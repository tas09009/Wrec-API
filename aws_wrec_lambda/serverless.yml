org: tas09009
app: aws-wrec-lambda
service: aws-wrec-lambda

frameworkVersion: '3'

plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements
provider:
  name: aws
  profile: serverless-admin
  region: us-east-1

    # NOTE: In case we need to create a new one
    # iam:
      # name: wrec-lambda-s3-csv
      # iamRoleStatements:
      #   - Effect: 'Allow'
      #     Resource: 'arn:aws:s3:::wrec-upload-book-csv/*'
      #     Action:
      #       - 's3:GetObject'

custom:
  dotenv:
    path: ../.env
  pythonRequirements:
    dockerizePip: true


  # Database URLs for different states
  dev:
    DATABASE_URL: postgresql+psycopg2://wnsqfvbk:GHl5Sq3gPJQHDgjwbMou4ZO6f7AE-oe0@mahmud.db.elephantsql.com/wnsqfvbk
  prod:
    DATABASE_URL: postgresql://tzmyhyab:VcSEcoqgi7hWdtUnUKqta9B2oVYSVc6f@mahmud.db.elephantsql.com/tzmyhyab
  test:
    DATABASE_URL: postgresql+psycopg2://seupapiy:4Ki4A2gKXs70TMb8xq_fXrJq8aJGmfGz@batyr.db.elephantsql.com/seupapiy


functions:
  processCsv:
    handler: handler.lambda_handler
    role: arn:aws:iam::831261256492:role/wrec-lambda-MyLambdaFunctionRole-zZbeLUcCxezm
    environment:
      DATABASE_URL: ${self:custom.${opt:stage, 'dev'}.DATABASE_URL}
    events:
      - s3:
          bucket: wrec-upload-book-csv
          event: s3:ObjectCreated:*
          existing: true
