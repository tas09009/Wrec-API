"""add user email and phone column

Revision ID: 8910dc11c870
Revises: f93eb7b96ca6
Create Date: 2023-06-22 15:17:41.667344

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8910dc11c870'
down_revision = 'f93eb7b96ca6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('user_book')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=128), nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.Integer(), nullable=True))
        # batch_op.alter_column('name',
        #        existing_type=sa.VARCHAR(length=128),
        #        nullable=False)
        batch_op.create_unique_constraint('user_email_unique', ['email'])
        batch_op.create_unique_constraint('user_phone_unique', ['phone_number'])
        # batch_op.create_unique_constraint(None, ['name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('user_email_unique', type_='unique')
        batch_op.drop_constraint('user_phone_unique', type_='unique')
        # batch_op.alter_column('name',
        #        existing_type=sa.VARCHAR(length=128),
        #        nullable=True)
        batch_op.drop_column('phone_number')
        batch_op.drop_column('email')

    # op.create_table('user_book',
    # sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='user_book_book_id_fkey'),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_book_user_id_fkey')
    # )
    # ### end Alembic commands ###
